use_mit_license()
devtools::check()
devtools::check()
use_mit_license()
usethis::use_mit_license("Daniela Senra")
devtools::check()
load("~/Documents/Doctorado/rpackage_origins2_creation/full_human_ppin.RData")
use_data(full_human_ppin)
library(devtools)
use_data(full_human_ppin)
use_r("data")
rm(full_human_ppin)
data("full_human_ppin")
use_r("build_ppin")
devtools::load_all(".")
build_ppin(full_human_ppin[1:4,])
full_human_ppin[1:4,]
full_human_ppin[1,1:8]
full_human_ppin[1:8,1]
full_human_ppin[1:8,2]
build(full_human_ppin[1:8,2])
build(full_human_ppin[1:100,2])
build(full_human_ppin[1:1000,2])
hola <- build(full_human_ppin[1:1000,2])
hola <- build_ppin(full_human_ppin[1:100,2])
View(hola)
devtools::load_all(".")
?full_human_ppin
devtools::load_all(".")
gc()
load("~/Documents/Doctorado/rpackage_origins2_creation/save_all_ppis.RData")
? full_human_ppin
use_data(accute_inflamatory_response_edges)
acute_inflammatory_response <- accute_inflamatory_response_edges
use_data(acute_inflamatory_response_edges)
acute_inflammatory_response_edges <- accute_inflamatory_response_edges
use_data(acute_inflammatory_response_edges)
devtools::load_all(".")
rm(acute_inflammatory_response_edges)
data("acute_inflammatory_response_edges")
use_data(cell_cycle_edges)
devtools::load_all(".")
rm(cell_cycle_edges)
data("cell_cycle_edges")
use_data(adaptative_immune_response_edges)
use_data(chronic_inflammatory_response_edges)
adaptive_immune_response_edges <- adaptative_immune_response_edges
use_data(adaptive_immune_response_edges)
devtools::load_all(".")
data("chronic_inflammatory_response_edges")
data("adaptive_immune_response_edges")
use_data(differentiation_edges)
use_data(dna_repair_edges)
gc()
data("differentiation_edges")
data("dna_repair_edges")
View(differentiation_edges)
View(dna_repair_edges)
use_data(dna_replication_edges)
use_data(hormone_secretion_edges)
data("dna_replication_edges")
data("hormone_secretion_edges")
View(dna_replication_edges)
View(hormone_secretion_edges)
use_data(humoral_immune_response_edges)
use_data(immune_response_edges)
data("humoral_immune_response_edges")
data("immune_response_edges")
View(humoral_immune_response_edges)
View(immune_response_edges)
use_data(inflammatory_response_edges)
use_data(innate_immune_response_edges)
data("innate_immune_response_edges")
data("inflammatory_response_edges")
View(inflammatory_response_edges)
View(innate_immune_response_edges)
use_data(migration_edges)
use_data(mitotic_cell_cycle_edges)
data("migration_edges")
data("mitotic_cell_cycle_edges")
View(migration_edges)
View(mitotic_cell_cycle_edges)
use_data(proliferation_edges)
use_data(response_to_tumor_cell_edges)
data("response_to_tumor_cell_edges")
data("proliferation_edges")
View(proliferation_edges)
View(response_to_tumor_cell_edges)
use_data(stem_differentiation_edges)
use_data(stem_proliferation_edges)
data("stem_differentiation_edges")
data("stem_proliferation_edges")
View(stem_differentiation_edges)
View(stem_proliferation_edges)
data("response_to_tumor_cell_edges")
data("proliferation_edges")
data("mitotic_cell_cycle_edges")
data("migration_edges")
data("innate_immune_response_edges")
data("inflammatory_response_edges")
data("immune_response_edges")
data("humoral_immune_response_edges")
data("hormone_secretion_edges")
data("dna_replication_edges")
data("dna_repair_edges")
data("differentiation_edges")
data("chronic_inflammatory_response_edges")
data("adaptive_immune_response_edges")
data("cell_cycle_edges")
data("acute_inflammatory_response_edges")
data("full_human_ppin")
use_r("activity")
devtools::load_all(".")
usethis::use_pipe()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
use_package("dplyr")
devtools::load_all(".")
tools::checkRdaFiles()
CheckLazyDataCompression <- function(pkg)
{
pkg_name <- sub("_.*", "", pkg)
lib <- tempfile(); dir.create(lib)
zs <- c("gzip", "bzip2", "xz")
res <- integer(3); names(res) <- zs
for (z in zs) {
opts <- c(paste0("--data-compress=", z),
"--no-libs", "--no-help", "--no-demo", "--no-exec", "--no-test-load")
install.packages(pkg, lib, INSTALL_opts = opts, repos = NULL, quiet = TRUE)
res[z] <- file.size(file.path(lib, pkg_name, "data", "Rdata.rdb"))
}
ceiling(res/1024)
}
CheckLazyDataCompression()
CheckLazyDataCompression(pkgname/data/Rdata.rdb)
CheckLazyDataCompression("ORIGINS2"/data/Rdata.rdb)
CheckLazyDataCompression(ORIGINS2/data/Rdata.rdb)
CheckLazyDataCompression("ORIGINS2/data/Rdata.rdb")
devtools::load_all(".")
library(ORIGINS2)
